// Generated by view binder compiler. Do not edit!
package com.jollitycn.mobilekeybroad.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.jollitycn.mobilekeybroad.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MouseControlFragmentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton leftMouseButton;

  @NonNull
  public final ImageButton moveDownButton;

  @NonNull
  public final ImageButton moveLeftButton;

  @NonNull
  public final ImageButton moveRightButton;

  @NonNull
  public final ImageButton moveUpButton;

  @NonNull
  public final ImageButton rightMouseButton;

  @NonNull
  public final SeekBar scrollBar;

  private MouseControlFragmentBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton leftMouseButton, @NonNull ImageButton moveDownButton,
      @NonNull ImageButton moveLeftButton, @NonNull ImageButton moveRightButton,
      @NonNull ImageButton moveUpButton, @NonNull ImageButton rightMouseButton,
      @NonNull SeekBar scrollBar) {
    this.rootView = rootView;
    this.leftMouseButton = leftMouseButton;
    this.moveDownButton = moveDownButton;
    this.moveLeftButton = moveLeftButton;
    this.moveRightButton = moveRightButton;
    this.moveUpButton = moveUpButton;
    this.rightMouseButton = rightMouseButton;
    this.scrollBar = scrollBar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MouseControlFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MouseControlFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.mouse_control_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MouseControlFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.leftMouseButton;
      ImageButton leftMouseButton = ViewBindings.findChildViewById(rootView, id);
      if (leftMouseButton == null) {
        break missingId;
      }

      id = R.id.moveDownButton;
      ImageButton moveDownButton = ViewBindings.findChildViewById(rootView, id);
      if (moveDownButton == null) {
        break missingId;
      }

      id = R.id.moveLeftButton;
      ImageButton moveLeftButton = ViewBindings.findChildViewById(rootView, id);
      if (moveLeftButton == null) {
        break missingId;
      }

      id = R.id.moveRightButton;
      ImageButton moveRightButton = ViewBindings.findChildViewById(rootView, id);
      if (moveRightButton == null) {
        break missingId;
      }

      id = R.id.moveUpButton;
      ImageButton moveUpButton = ViewBindings.findChildViewById(rootView, id);
      if (moveUpButton == null) {
        break missingId;
      }

      id = R.id.rightMouseButton;
      ImageButton rightMouseButton = ViewBindings.findChildViewById(rootView, id);
      if (rightMouseButton == null) {
        break missingId;
      }

      id = R.id.scrollBar;
      SeekBar scrollBar = ViewBindings.findChildViewById(rootView, id);
      if (scrollBar == null) {
        break missingId;
      }

      return new MouseControlFragmentBinding((LinearLayout) rootView, leftMouseButton,
          moveDownButton, moveLeftButton, moveRightButton, moveUpButton, rightMouseButton,
          scrollBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
